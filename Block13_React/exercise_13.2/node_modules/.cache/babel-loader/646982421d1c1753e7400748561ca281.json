{"ast":null,"code":"var _jsxFileName = \"/home/AliceAtalla/Trybe-Modulo_FrontEnd/Block13_React/exercise_13.2/src/components/Form.jsx\";\nimport React from 'react';\nimport '../style/form.css';\nimport optionStates from '../states';\nimport Curriculum from './Curriculum';\nconst initialState = {\n  name: '',\n  email: '',\n  cpf: 0,\n  adress: '',\n  city: ''\n};\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n    };\n\n    this.state = {\n      initialState\n    };\n    this.renderHalf = this.renderHalf.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.btnClear = this.btnClear.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === 'name') value = value.toUpperCase();\n    this.setState({\n      [name]: value\n    });\n  }\n\n  btnClear() {\n    this.setState(initialState);\n  }\n\n  button() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.btnClear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Clear All\"));\n  }\n\n  renderHalf() {\n    const {\n      city\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"city\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: city,\n      onChange: this.handleChange,\n      name: \"city\",\n      type: \"text\",\n      maxLength: \"28\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"State\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, optionStates.map(state => /*#__PURE__*/React.createElement(\"option\", {\n      value: state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, state)))));\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      cpf,\n      adress\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: name,\n      onChange: this.handleChange,\n      name: \"name\",\n      type: \"text\",\n      maxLength: \"40\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: email,\n      onChange: this.handleChange,\n      name: \"email\",\n      type: \"text\",\n      maxLength: \"50\",\n      required: true,\n      pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"cpf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"CPF\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: cpf,\n      onChange: this.handleChange,\n      name: \"cpf\",\n      type: \"text\",\n      maxLength: \"11\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"adress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, \"Adress\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: adress,\n      onChange: this.handleChange,\n      name: \"adress\",\n      type: \"text\",\n      maxLength: \"200\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    })), this.renderHalf()), /*#__PURE__*/React.createElement(Curriculum, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    })), this.btnClear());\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/AliceAtalla/Trybe-Modulo_FrontEnd/Block13_React/exercise_13.2/src/components/Form.jsx"],"names":["React","optionStates","Curriculum","initialState","name","email","cpf","adress","city","Form","Component","constructor","props","handleSubmit","event","preventDefault","state","renderHalf","bind","handleChange","btnClear","value","target","toUpperCase","setState","button","map","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../style/form.css';\nimport optionStates from '../states';\nimport Curriculum from './Curriculum';\n\nconst initialState = {\n  name: '',\n  email: '',\n  cpf: 0,\n  adress: '',\n  city: '',\n};\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialState,\n    };\n    this.renderHalf = this.renderHalf.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.btnClear = this.btnClear.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    if (name === 'name') value = value.toUpperCase();\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  btnClear() {\n    this.setState(initialState);\n  }\n\n  button() {\n    return (\n      <div className='buttons'>\n        <button onClick={this.handleSubmit}>Submit</button>\n        <button onClick={this.btnClear}>Clear All</button>\n      </div>\n    );\n  }\n\n  renderHalf() {\n    const { city } = this.state;\n    return (\n      <>\n        <div>\n          <label htmlFor='city'>City</label>\n          <input\n            value={city}\n            onChange={this.handleChange}\n            name='city'\n            type='text'\n            maxLength='28'\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor='State'>State</label>\n          <select>\n            {optionStates.map((state) => (\n              <option value={state}>{state}</option>\n            ))}\n          </select>\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    const { name, email, cpf, adress } = this.state;\n    return (\n      <>\n        <form>\n          <fieldset>\n            <div>\n              <label htmlFor='name'>Name</label>\n              <input\n                value={name}\n                onChange={this.handleChange}\n                name='name'\n                type='text'\n                maxLength='40'\n                required\n              />\n            </div>\n            <div>\n              <label htmlFor='email'>Email</label>\n              <input\n                value={email}\n                onChange={this.handleChange}\n                name='email'\n                type='text'\n                maxLength='50'\n                required\n                pattern='[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$'\n              />\n            </div>\n            <div>\n              <label htmlFor='cpf'>CPF</label>\n              <input\n                value={cpf}\n                onChange={this.handleChange}\n                name='cpf'\n                type='text'\n                maxLength='11'\n                required\n              />\n            </div>\n            <div>\n              <label htmlFor='adress'>Adress</label>\n              <input\n                value={adress}\n                onChange={this.handleChange}\n                name='adress'\n                type='text'\n                maxLength='200'\n                required\n              />\n            </div>\n            {this.renderHalf()}\n          </fieldset>\n          <Curriculum />\n        </form>\n        {this.btnClear()}\n      </>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}